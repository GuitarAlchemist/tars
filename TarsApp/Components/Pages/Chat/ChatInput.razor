@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.AI
@using Microsoft.JSInterop
@inject IJSRuntime JS

<MudPaper Class="d-flex align-center chat-input">
    <MudTextField @ref="textField" 
                 @bind-Value="@messageText" 
                 Placeholder="Type your message..." 
                 Class="flex-grow-1 mr-2"
                 Immediate="true"
                 @onkeydown="@HandleKeyPress" />
    <MudButton Color="Color.Primary"
              OnClick="@SendMessageAsync"
              StartIcon="@Icons.Material.Filled.Send">
        Send
    </MudButton>
</MudPaper>

@code {
    private MudTextField<string>? textField;
    private string? messageText;

    [Parameter]
    public EventCallback<ChatMessage> OnSend { get; set; }

    public async ValueTask FocusAsync()
    {
        if (textField != null)
        {
            await textField.FocusAsync();
        }
    }

    private async Task SendMessageAsync()
    {
        if (messageText is { Length: > 0 } text)
        {
            messageText = null;
            await OnSend.InvokeAsync(new ChatMessage(ChatRole.User, text));
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !e.ShiftKey)
        {
            await SendMessageAsync();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await FocusAsync();
        }
    }
}