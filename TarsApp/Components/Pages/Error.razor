@page "/Error"
@using System.Diagnostics
@using MudBlazor

<PageTitle>Error</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
    <MudText Typo="Typo.h3" Color="Color.Error" Class="mb-4">Error</MudText>
    <MudText Typo="Typo.h5" Color="Color.Error" Class="mb-4">An error occurred while processing your request.</MudText>

    @if (ShowRequestId)
    {
        <MudText Class="mb-4">
            <strong>Request ID:</strong> <code>@RequestId</code>
        </MudText>
    }

    <MudDivider Class="my-4" />
    
    <MudText Typo="Typo.h5" Class="mb-2">Development Mode</MudText>
    <MudText Class="mb-2">
        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
    </MudText>
    <MudText Class="mb-4">
        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
        It can result in displaying sensitive information from exceptions to end users.
        For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
        and restarting the app.
    </MudText>
</MudContainer>

@code{
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}
