module TarsFableUI.Types

open System

// TARS System Types - Generated by TARS Agent Teams
type TarsSystemStatus = {
    IsOnline: bool
    Version: string
    Uptime: TimeSpan
    CpuUsage: float
    MemoryUsage: float
    CudaAvailable: bool
    AgentCount: int
    LastUpdate: DateTime
}

type TarsProject = {
    Id: string
    Name: string
    Description: string
    Status: ProjectStatus
    CreatedAt: DateTime
    LastModified: DateTime
    Files: string list
    Tests: TestResult list
}

and ProjectStatus = 
    | Creating
    | Active
    | Completed
    | Error of string

type TarsMetascript = {
    Id: string
    Name: string
    Description: string
    Status: MetascriptStatus
    ExecutionTime: TimeSpan option
    Output: string option
    Variables: Map<string, obj>
}

and MetascriptStatus =
    | Idle
    | Running
    | Completed
    | Error of string

type TarsAgent = {
    Id: string
    Name: string
    Persona: string
    Status: AgentStatus
    Capabilities: string list
    CurrentTask: string option
    Performance: AgentPerformance
}

and AgentStatus =
    | Idle
    | Active
    | Busy
    | Error of string

and AgentPerformance = {
    TasksCompleted: int
    AverageExecutionTime: TimeSpan
    SuccessRate: float
    LastActivity: DateTime
}

type TestResult = {
    Id: string
    Name: string
    Status: TestStatus
    Duration: TimeSpan
    Message: string option
}

and TestStatus =
    | Passed
    | Failed
    | Running

type PerformanceMetrics = {
    Cuda: CudaMetrics
    System: SystemMetrics
    Agents: AgentMetrics
}

and CudaMetrics = {
    Available: bool
    DeviceName: string option
    MemoryUsed: int64
    MemoryTotal: int64
    SearchesPerSecond: float
}

and SystemMetrics = {
    CpuUsage: float
    MemoryUsage: float
    DiskUsage: float
    NetworkActivity: float
}

and AgentMetrics = {
    TotalAgents: int
    ActiveAgents: int
    TasksInQueue: int
    AverageResponseTime: TimeSpan
}

// UI Component Types
type ComponentSpec = {
    Name: string
    Props: Map<string, obj>
    Children: ComponentSpec list
    Styles: string list
    Events: Map<string, string>
}

type UIUpdate = {
    ComponentId: string
    UpdateType: UpdateType
    Data: obj
    Timestamp: DateTime
}

and UpdateType =
    | ComponentUpdate of ComponentSpec
    | StyleUpdate of string list
    | StateUpdate of obj
    | LayoutUpdate of ComponentSpec list
