// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/filesync.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DistributedFileSync.Services.Grpc {
  /// <summary>
  /// File synchronization service
  /// Designed by: Architect Agent (Alice)
  /// Implemented by: Senior Developer Agent (Bob)
  /// Performance optimized by: Performance Engineer Agent (Dave)
  /// </summary>
  public static partial class FileSyncService
  {
    static readonly string __ServiceName = "filesync.FileSyncService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.SyncFileRequest> __Marshaller_filesync_SyncFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.SyncFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.SyncFileResponse> __Marshaller_filesync_SyncFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.SyncFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest> __Marshaller_filesync_GetFileMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse> __Marshaller_filesync_GetFileMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.FileChunkRequest> __Marshaller_filesync_FileChunkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.FileChunkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.FileChunkResponse> __Marshaller_filesync_FileChunkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.FileChunkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.ResolveConflictRequest> __Marshaller_filesync_ResolveConflictRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.ResolveConflictRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.ResolveConflictResponse> __Marshaller_filesync_ResolveConflictResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.ResolveConflictResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest> __Marshaller_filesync_GetNodeStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse> __Marshaller_filesync_GetNodeStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.HeartbeatRequest> __Marshaller_filesync_HeartbeatRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.HeartbeatRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.HeartbeatResponse> __Marshaller_filesync_HeartbeatResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.HeartbeatResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.SyncFileRequest, global::DistributedFileSync.Services.Grpc.SyncFileResponse> __Method_SyncFile = new grpc::Method<global::DistributedFileSync.Services.Grpc.SyncFileRequest, global::DistributedFileSync.Services.Grpc.SyncFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SyncFile",
        __Marshaller_filesync_SyncFileRequest,
        __Marshaller_filesync_SyncFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest, global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse> __Method_GetFileMetadata = new grpc::Method<global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest, global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFileMetadata",
        __Marshaller_filesync_GetFileMetadataRequest,
        __Marshaller_filesync_GetFileMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.FileChunkRequest, global::DistributedFileSync.Services.Grpc.FileChunkResponse> __Method_StreamFileContent = new grpc::Method<global::DistributedFileSync.Services.Grpc.FileChunkRequest, global::DistributedFileSync.Services.Grpc.FileChunkResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "StreamFileContent",
        __Marshaller_filesync_FileChunkRequest,
        __Marshaller_filesync_FileChunkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.ResolveConflictRequest, global::DistributedFileSync.Services.Grpc.ResolveConflictResponse> __Method_ResolveConflict = new grpc::Method<global::DistributedFileSync.Services.Grpc.ResolveConflictRequest, global::DistributedFileSync.Services.Grpc.ResolveConflictResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResolveConflict",
        __Marshaller_filesync_ResolveConflictRequest,
        __Marshaller_filesync_ResolveConflictResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest, global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse> __Method_GetNodeStatus = new grpc::Method<global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest, global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNodeStatus",
        __Marshaller_filesync_GetNodeStatusRequest,
        __Marshaller_filesync_GetNodeStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.HeartbeatRequest, global::DistributedFileSync.Services.Grpc.HeartbeatResponse> __Method_Heartbeat = new grpc::Method<global::DistributedFileSync.Services.Grpc.HeartbeatRequest, global::DistributedFileSync.Services.Grpc.HeartbeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Heartbeat",
        __Marshaller_filesync_HeartbeatRequest,
        __Marshaller_filesync_HeartbeatResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DistributedFileSync.Services.Grpc.FilesyncReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FileSyncService</summary>
    [grpc::BindServiceMethod(typeof(FileSyncService), "BindService")]
    public abstract partial class FileSyncServiceBase
    {
      /// <summary>
      /// Synchronize a file between nodes
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.SyncFileResponse> SyncFile(global::DistributedFileSync.Services.Grpc.SyncFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get file metadata
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse> GetFileMetadata(global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stream file content for large files
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task StreamFileContent(grpc::IAsyncStreamReader<global::DistributedFileSync.Services.Grpc.FileChunkRequest> requestStream, grpc::IServerStreamWriter<global::DistributedFileSync.Services.Grpc.FileChunkResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resolve file conflicts
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.ResolveConflictResponse> ResolveConflict(global::DistributedFileSync.Services.Grpc.ResolveConflictRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get node status and capabilities
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse> GetNodeStatus(global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Heartbeat for node discovery and health monitoring
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.HeartbeatResponse> Heartbeat(global::DistributedFileSync.Services.Grpc.HeartbeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FileSyncServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SyncFile, serviceImpl.SyncFile)
          .AddMethod(__Method_GetFileMetadata, serviceImpl.GetFileMetadata)
          .AddMethod(__Method_StreamFileContent, serviceImpl.StreamFileContent)
          .AddMethod(__Method_ResolveConflict, serviceImpl.ResolveConflict)
          .AddMethod(__Method_GetNodeStatus, serviceImpl.GetNodeStatus)
          .AddMethod(__Method_Heartbeat, serviceImpl.Heartbeat).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FileSyncServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SyncFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.SyncFileRequest, global::DistributedFileSync.Services.Grpc.SyncFileResponse>(serviceImpl.SyncFile));
      serviceBinder.AddMethod(__Method_GetFileMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.GetFileMetadataRequest, global::DistributedFileSync.Services.Grpc.GetFileMetadataResponse>(serviceImpl.GetFileMetadata));
      serviceBinder.AddMethod(__Method_StreamFileContent, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::DistributedFileSync.Services.Grpc.FileChunkRequest, global::DistributedFileSync.Services.Grpc.FileChunkResponse>(serviceImpl.StreamFileContent));
      serviceBinder.AddMethod(__Method_ResolveConflict, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.ResolveConflictRequest, global::DistributedFileSync.Services.Grpc.ResolveConflictResponse>(serviceImpl.ResolveConflict));
      serviceBinder.AddMethod(__Method_GetNodeStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.GetNodeStatusRequest, global::DistributedFileSync.Services.Grpc.GetNodeStatusResponse>(serviceImpl.GetNodeStatus));
      serviceBinder.AddMethod(__Method_Heartbeat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.HeartbeatRequest, global::DistributedFileSync.Services.Grpc.HeartbeatResponse>(serviceImpl.Heartbeat));
    }

  }
  /// <summary>
  /// Node discovery and management service
  /// </summary>
  public static partial class NodeDiscoveryService
  {
    static readonly string __ServiceName = "filesync.NodeDiscoveryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.RegisterNodeRequest> __Marshaller_filesync_RegisterNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.RegisterNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.RegisterNodeResponse> __Marshaller_filesync_RegisterNodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.RegisterNodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest> __Marshaller_filesync_DiscoverNodesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse> __Marshaller_filesync_DiscoverNodesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest> __Marshaller_filesync_UpdateNodeStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse> __Marshaller_filesync_UpdateNodeStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.RegisterNodeRequest, global::DistributedFileSync.Services.Grpc.RegisterNodeResponse> __Method_RegisterNode = new grpc::Method<global::DistributedFileSync.Services.Grpc.RegisterNodeRequest, global::DistributedFileSync.Services.Grpc.RegisterNodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterNode",
        __Marshaller_filesync_RegisterNodeRequest,
        __Marshaller_filesync_RegisterNodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest, global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse> __Method_DiscoverNodes = new grpc::Method<global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest, global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DiscoverNodes",
        __Marshaller_filesync_DiscoverNodesRequest,
        __Marshaller_filesync_DiscoverNodesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest, global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse> __Method_UpdateNodeStatus = new grpc::Method<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest, global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNodeStatus",
        __Marshaller_filesync_UpdateNodeStatusRequest,
        __Marshaller_filesync_UpdateNodeStatusResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DistributedFileSync.Services.Grpc.FilesyncReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of NodeDiscoveryService</summary>
    [grpc::BindServiceMethod(typeof(NodeDiscoveryService), "BindService")]
    public abstract partial class NodeDiscoveryServiceBase
    {
      /// <summary>
      /// Register a new node in the network
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.RegisterNodeResponse> RegisterNode(global::DistributedFileSync.Services.Grpc.RegisterNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Discover available nodes
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse> DiscoverNodes(global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update node status
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse> UpdateNodeStatus(global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NodeDiscoveryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RegisterNode, serviceImpl.RegisterNode)
          .AddMethod(__Method_DiscoverNodes, serviceImpl.DiscoverNodes)
          .AddMethod(__Method_UpdateNodeStatus, serviceImpl.UpdateNodeStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NodeDiscoveryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RegisterNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.RegisterNodeRequest, global::DistributedFileSync.Services.Grpc.RegisterNodeResponse>(serviceImpl.RegisterNode));
      serviceBinder.AddMethod(__Method_DiscoverNodes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.DiscoverNodesRequest, global::DistributedFileSync.Services.Grpc.DiscoverNodesResponse>(serviceImpl.DiscoverNodes));
      serviceBinder.AddMethod(__Method_UpdateNodeStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DistributedFileSync.Services.Grpc.UpdateNodeStatusRequest, global::DistributedFileSync.Services.Grpc.UpdateNodeStatusResponse>(serviceImpl.UpdateNodeStatus));
    }

  }
}
#endregion
