#!/usr/bin/env pwsh

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "   TARS AUTONOMOUS UI EVOLUTION DEMO" -ForegroundColor Cyan  
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "ü§ñ TARS will now demonstrate autonomous UI creation and evolution" -ForegroundColor Green
Write-Host "üìä The system will analyze its own state and generate appropriate UI" -ForegroundColor Yellow
Write-Host "üîÑ Watch as TARS creates and modifies its interface in real-time" -ForegroundColor Magenta
Write-Host ""
Read-Host "Press Enter to start the demonstration"

Write-Host ""
Write-Host "üöÄ Starting TARS Autonomous UI Evolution..." -ForegroundColor Cyan
Write-Host ""

# Run the autonomous UI evolution metascript
Write-Host "üìã Executing: autonomous_ui_evolution.trsx" -ForegroundColor Yellow
Write-Host ""

try {
    & dotnet run --project "../../TarsEngine.FSharp.Cli/TarsEngine.FSharp.Cli.fsproj" -- run ".tars/metascripts/autonomous_ui_evolution.trsx"
    
    Write-Host ""
    Write-Host "üåê Opening evolved UI in browser..." -ForegroundColor Green
    Write-Host ""
    
    # Open the generated UI
    if ($IsWindows) {
        Start-Process ".tars/projects/tars_evolved_ui.html"
    } elseif ($IsMacOS) {
        & open ".tars/projects/tars_evolved_ui.html"
    } else {
        & xdg-open ".tars/projects/tars_evolved_ui.html"
    }
    
    Write-Host ""
    Write-Host "‚úÖ Demo complete!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üéØ What you just witnessed:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ TARS analyzed its own system state" -ForegroundColor White
    Write-Host "   ‚Ä¢ Generated F# React components based on current needs" -ForegroundColor White
    Write-Host "   ‚Ä¢ Created responsive layouts dynamically" -ForegroundColor White
    Write-Host "   ‚Ä¢ Deployed the UI with hot reload capabilities" -ForegroundColor White
    Write-Host ""
    Write-Host "üîÑ In a full implementation, this would happen continuously:" -ForegroundColor Magenta
    Write-Host "   ‚Ä¢ Every few seconds, TARS re-analyzes its state" -ForegroundColor White
    Write-Host "   ‚Ä¢ Components are added, modified, or removed as needed" -ForegroundColor White
    Write-Host "   ‚Ä¢ The UI evolves to match system requirements" -ForegroundColor White
    Write-Host "   ‚Ä¢ Users see a living, breathing interface that adapts" -ForegroundColor White
    Write-Host ""
    Write-Host "üí° Key Features Demonstrated:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Autonomous component generation" -ForegroundColor White
    Write-Host "   ‚Ä¢ Real-time UI adaptation" -ForegroundColor White
    Write-Host "   ‚Ä¢ Performance-based UI changes" -ForegroundColor White
    Write-Host "   ‚Ä¢ Agent activity monitoring" -ForegroundColor White
    Write-Host "   ‚Ä¢ Zero-downtime deployments" -ForegroundColor White
    Write-Host ""
    
} catch {
    Write-Host "‚ùå Error running demo: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° Note: This demo requires the TARS CLI to be built." -ForegroundColor Yellow
    Write-Host "   Run 'dotnet build' in the TarsEngine.FSharp.Cli directory first." -ForegroundColor Yellow
}

Read-Host "Press Enter to exit"
