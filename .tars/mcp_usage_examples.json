{
  "basic_server_usage": [
    "# Start TARS as MCP server on stdio",
    "tars mcp server start --transport stdio",
    "",
    "# Start TARS as MCP server on HTTP",
    "tars mcp server start --transport sse --port 3000 --host 0.0.0.0",
    "",
    "# Check server status",
    "tars mcp server status --detailed",
    "",
    "# Show server capabilities",
    "tars mcp server info --format json"
  ],
  "client_operations": [
    "# Register GitHub MCP server",
    "tars mcp client register --url ws://localhost:3001 --name github-server",
    "",
    "# Discover servers on local network",
    "tars mcp client discover --network local --auto-register",
    "",
    "# List registered servers",
    "tars mcp client list --detailed --tools --resources",
    "",
    "# Call external tool",
    "tars mcp client call --server github --tool get_repository \\",
    "  --args '{\"owner\":\"microsoft\",\"repo\":\"vscode\"}'",
    "",
    "# Access external resource",
    "tars mcp client resource --server github \\",
    "  --uri github://repos/microsoft/vscode --output repo-info.json"
  ],
  "workflow_examples": [
    "# Create CI/CD workflow",
    "tars mcp workflow create --name ci-pipeline \\",
    "  --servers github,jenkins,slack --output ci-workflow.json",
    "",
    "# Run workflow",
    "tars mcp workflow run --definition ci-workflow.json \\",
    "  --parameters '{\"branch\":\"main\",\"environment\":\"staging\"}' --monitor",
    "",
    "# Check workflow status",
    "tars mcp workflow status --workflow ci-pipeline-123"
  ],
  "integration_examples": [
    "# Generate GitHub integration metascript",
    "tars mcp integrate generate --server github --use-case code-analysis \\",
    "  --output github-integration.trsx",
    "",
    "# Test integration",
    "tars mcp integrate test --metascript github-integration.trsx --dry-run",
    "",
    "# Deploy integration",
    "tars mcp integrate deploy --metascript github-integration.trsx \\",
    "  --environment prod --auto-start"
  ],
  "advanced_scenarios": [
    "# Multi-server data analysis workflow",
    "tars mcp workflow create --name data-analysis \\",
    "  --servers database,analytics,visualization",
    "",
    "# Autonomous server discovery and integration",
    "tars mcp client discover --network subnet --auto-register",
    "tars mcp integrate generate --server auto-discovered-1 --use-case general",
    "",
    "# Cross-platform development workflow",
    "tars mcp workflow run --definition cross-platform-build.json \\",
    "  --parameters '{\"platforms\":[\"windows\",\"linux\",\"macos\"]}'",
    "",
    "# Real-time monitoring integration",
    "tars mcp integrate generate --server monitoring --use-case alerts \\",
    "  --template real-time-monitoring"
  ]
}