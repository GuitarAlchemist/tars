#!/usr/bin/env dotnet fsi

// DIRECT TASK MANAGER GENERATOR - KEEP TRYING UNTIL SUCCESS!

open System
open System.IO

printfn "🎯 DIRECT TASK MANAGER GENERATOR - ATTEMPT 1"
printfn "============================================"

try
    let timestamp = DateTime.Now.ToString("yyyyMMdd_HHmmss")
    let projectName = sprintf "TaskManager_%s" timestamp
    let projectDir = Path.Combine(".tars", "projects", projectName)
    
    printfn "📁 Creating directory: %s" projectDir
    Directory.CreateDirectory(projectDir) |> ignore
    Directory.CreateDirectory(Path.Combine(projectDir, "src")) |> ignore
    
    printfn "✅ Directory created successfully"
    
    // Generate simple working F# code
    let programCode = """open System

type TaskItem = {
    Id: int
    Title: string
    IsCompleted: bool
}

let mutable tasks = []

let addTask title =
    let newId = (List.length tasks) + 1
    let task = { Id = newId; Title = title; IsCompleted = false }
    tasks <- task :: tasks
    printfn "✅ Added: %s" title
    task

let completeTask id =
    tasks <- tasks |> List.map (fun t -> 
        if t.Id = id then { t with IsCompleted = true }
        else t)
    printfn "🎉 Completed task %d" id

let showTasks () =
    printfn "📋 Current Tasks:"
    tasks |> List.iter (fun t ->
        let status = if t.IsCompleted then "✅" else "⏳"
        printfn "  %s %d. %s" status t.Id t.Title)

[<EntryPoint>]
let main argv =
    printfn "🚀 TASK MANAGER - Generated by TARS"
    printfn "=================================="
    
    // Demo
    let _ = addTask "Complete project proposal"
    let _ = addTask "Buy groceries"
    let _ = addTask "Review code"
    
    showTasks()
    
    completeTask 2
    
    printfn ""
    showTasks()
    
    printfn ""
    printfn "✅ TARS successfully generated working task manager!"
    0
"""
    
    let projectFile = sprintf """<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="src/Program.fs" />
  </ItemGroup>
</Project>"""
    
    printfn "💾 Writing Program.fs..."
    File.WriteAllText(Path.Combine(projectDir, "src", "Program.fs"), programCode)
    
    printfn "💾 Writing project file..."
    File.WriteAllText(Path.Combine(projectDir, projectName + ".fsproj"), projectFile)
    
    let readmeContent = sprintf """# %s

Generated by TARS on %s

## Features
- Add tasks
- Complete tasks
- View task list

## Usage
```bash
cd %s
dotnet run
```

✅ This is a working F# application generated by TARS!
""" projectName (DateTime.Now.ToString()) projectDir
    
    printfn "💾 Writing README..."
    File.WriteAllText(Path.Combine(projectDir, "README.md"), readmeContent)
    
    printfn ""
    printfn "🎉 SUCCESS! Generated project at: %s" projectDir
    printfn ""
    printfn "🚀 To test it:"
    printfn "   cd %s" projectDir
    printfn "   dotnet run"
    
with
| ex ->
    printfn "❌ Error: %s" ex.Message
    printfn "🔄 Will try again with different approach..."
