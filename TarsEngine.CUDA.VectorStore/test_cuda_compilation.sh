#!/bin/bash

# Quick CUDA compilation test for TARS Unified Non-Euclidean Vector Store

echo "üß™ TARS CUDA Compilation Test"
echo "============================="
echo ""

# Check CUDA availability
echo "üîç Checking CUDA environment..."
if ! command -v nvcc &> /dev/null; then
    echo "‚ùå CUDA compiler (nvcc) not found!"
    exit 1
fi

echo "‚úÖ CUDA compiler found:"
nvcc --version | head -n 4
echo ""

# Check GPU
echo "üîç Checking GPU availability..."
if ! nvidia-smi &> /dev/null; then
    echo "‚ùå NVIDIA GPU not detected!"
    exit 1
fi

echo "‚úÖ GPU detected:"
nvidia-smi --query-gpu=name,memory.total,compute_cap --format=csv,noheader,nounits
echo ""

# Compile the unified vector store
echo "üî® Compiling unified non-Euclidean vector store..."
SOURCE_FILE="unified_non_euclidean_vector_store.cu"
OUTPUT_FILE="test_unified_quick"

if [ ! -f "$SOURCE_FILE" ]; then
    echo "‚ùå Source file not found: $SOURCE_FILE"
    exit 1
fi

# Simple compilation with basic flags
if nvcc -O3 -o "$OUTPUT_FILE" "$SOURCE_FILE" -lcublas -lcurand; then
    echo "‚úÖ Compilation successful!"
else
    echo "‚ùå Compilation failed!"
    exit 1
fi

# Test execution
echo ""
echo "üöÄ Testing execution..."
if [ -f "$OUTPUT_FILE" ]; then
    echo "Running CUDA test..."
    timeout 30s ./"$OUTPUT_FILE" || {
        echo "‚ö†Ô∏è  Test timed out or failed, but compilation works!"
        echo "‚úÖ CUDA compilation is functional"
        exit 0
    }
    echo "‚úÖ CUDA test completed successfully!"
else
    echo "‚ùå Executable not found"
    exit 1
fi

echo ""
echo "üéâ CUDA COMPILATION TEST PASSED!"
echo "‚úÖ NVCC compiler working"
echo "‚úÖ GPU detected and accessible"
echo "‚úÖ Unified vector store compiles"
echo "‚úÖ CUDA execution functional"
echo ""
echo "Ready for F# integration!"
