apiVersion: v1
kind: Namespace
metadata:
  name: tars
  labels:
    name: tars
    app.kubernetes.io/name: tars
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: namespace
    app.kubernetes.io/part-of: tars-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tars-config
  namespace: tars
  labels:
    app.kubernetes.io/name: tars
    app.kubernetes.io/component: config
data:
  # TARS Configuration
  TARS_ENVIRONMENT: "local"
  TARS_LOG_LEVEL: "Information"
  TARS_ENABLE_SWAGGER: "true"
  TARS_ENABLE_METRICS: "true"
  
  # Database Configuration
  DATABASE_TYPE: "sqlite"
  DATABASE_CONNECTION: "Data Source=/app/data/tars.db"
  
  # Redis Configuration (for local development)
  REDIS_CONNECTION: "redis:6379"
  
  # Authentication Configuration
  JWT_SECRET: "tars-local-development-secret-key-change-in-production"
  JWT_ISSUER: "tars-local"
  JWT_AUDIENCE: "tars-users"
  JWT_EXPIRY_MINUTES: "60"
  
  # Feature Flags
  ENABLE_INTERNAL_DIALOGUE_ACCESS: "true"
  ENABLE_TEMPLATE_FREE_UI: "true"
  ENABLE_LIVE_DOCUMENTATION: "true"
  ENABLE_HUMOR_GENERATION: "true"
  ENABLE_PERSONALITY_PARAMETERS: "true"
  ENABLE_HYPERLIGHT_INTEGRATION: "false"  # Disabled for local development
  
  # Performance Configuration
  MAX_CONCURRENT_REQUESTS: "100"
  REQUEST_TIMEOUT_SECONDS: "30"
  MEMORY_LIMIT_MB: "512"
  
  # Monitoring Configuration
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
  HEALTH_CHECK_INTERVAL_SECONDS: "30"
---
apiVersion: v1
kind: Secret
metadata:
  name: tars-secrets
  namespace: tars
  labels:
    app.kubernetes.io/name: tars
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Base64 encoded secrets for local development
  # In production, these should be properly managed
  database-password: dGFycy1sb2NhbC1kYi1wYXNzd29yZA==  # tars-local-db-password
  redis-password: dGFycy1sb2NhbC1yZWRpcy1wYXNzd29yZA==      # tars-local-redis-password
  jwt-secret: dGFycy1sb2NhbC1qd3Qtc2VjcmV0LWtleQ==          # tars-local-jwt-secret-key
  api-key: dGFycy1sb2NhbC1hcGkta2V5LWZvci1kZXZlbG9wbWVudA==  # tars-local-api-key-for-development
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tars-data-pvc
  namespace: tars
  labels:
    app.kubernetes.io/name: tars
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard  # Use default storage class for minikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tars-logs-pvc
  namespace: tars
  labels:
    app.kubernetes.io/name: tars
    app.kubernetes.io/component: logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: tars
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: tars
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
