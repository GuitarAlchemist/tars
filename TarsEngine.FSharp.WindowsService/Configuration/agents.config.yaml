# TARS Agent System Configuration
# Multi-Agent Orchestration and Coordination Settings

# Global agent settings
global:
  maxConcurrentAgents: 20
  defaultTimeoutMinutes: 30
  healthCheckIntervalSeconds: 15
  communicationProtocol: "semantic-messaging"
  
  # Agent lifecycle
  lifecycle:
    startupTimeoutSeconds: 60
    shutdownTimeoutSeconds: 30
    gracefulShutdown: true
    autoRestart: true
    maxRestartAttempts: 3

# Agent type definitions
agentTypes:
  Infrastructure:
    maxInstances: 5
    priority: "Critical"
    capabilities:
      - "service-management"
      - "system-monitoring"
      - "configuration-management"
      - "deployment-automation"
    resources:
      memoryLimitMB: 256
      cpuLimitPercent: 25
      
  Development:
    maxInstances: 8
    priority: "High"
    capabilities:
      - "code-generation"
      - "code-analysis"
      - "refactoring"
      - "documentation"
      - "testing"
    resources:
      memoryLimitMB: 512
      cpuLimitPercent: 40
      
  Analysis:
    maxInstances: 4
    priority: "High"
    capabilities:
      - "performance-analysis"
      - "quality-analysis"
      - "security-analysis"
      - "dependency-analysis"
      - "roadmap-analysis"
    resources:
      memoryLimitMB: 384
      cpuLimitPercent: 30
      
  QA:
    maxInstances: 3
    priority: "High"
    capabilities:
      - "test-generation"
      - "test-execution"
      - "quality-assurance"
      - "bug-detection"
      - "requirement-validation"
    resources:
      memoryLimitMB: 384
      cpuLimitPercent: 30
      
  Coordination:
    maxInstances: 2
    priority: "Critical"
    capabilities:
      - "task-orchestration"
      - "agent-coordination"
      - "semantic-analysis"
      - "decision-making"
    resources:
      memoryLimitMB: 512
      cpuLimitPercent: 35

# Semantic coordination settings
semanticCoordination:
  enabled: true
  analysisIntervalSeconds: 30
  matchingAlgorithm: "semantic-similarity"
  confidenceThreshold: 0.85
  
  # Natural language processing
  nlp:
    enabled: true
    maxTokens: 1000
    contextWindow: 2048
    
  # Capability matching
  capabilityMatching:
    weightFactors:
      skills: 0.4
      availability: 0.3
      performance: 0.2
      workload: 0.1
    
    # Matching thresholds
    thresholds:
      excellent: 0.9
      good: 0.75
      acceptable: 0.6
      minimum: 0.5

# Agent communication
communication:
  protocol: "semantic-messaging"
  messageQueueSize: 1000
  messageTimeoutSeconds: 30
  retryAttempts: 3
  
  # Message types
  messageTypes:
    - "task-request"
    - "task-response"
    - "status-update"
    - "capability-announcement"
    - "coordination-request"
    - "health-check"
    
  # Routing
  routing:
    algorithm: "intelligent-routing"
    loadBalancing: true
    failover: true

# Agent monitoring
monitoring:
  enabled: true
  metricsCollection: true
  performanceTracking: true
  healthMonitoring: true
  
  # Metrics
  metrics:
    taskCompletionRate: true
    responseTime: true
    errorRate: true
    resourceUsage: true
    
  # Health checks
  healthChecks:
    intervalSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
    
  # Performance tracking
  performance:
    trackExecutionTime: true
    trackMemoryUsage: true
    trackCpuUsage: true
    trackTaskThroughput: true

# Agent specializations
specializations:
  RoadmapAnalysisAgent:
    type: "Analysis"
    capabilities:
      - "roadmap-analysis"
      - "progress-tracking"
      - "risk-assessment"
      - "recommendation-generation"
    configuration:
      analysisIntervalMinutes: 60
      autoApplyRecommendations: true
      riskThreshold: 0.3
      
  SemanticCoordinatorAgent:
    type: "Coordination"
    capabilities:
      - "semantic-analysis"
      - "task-routing"
      - "agent-matching"
      - "workflow-orchestration"
    configuration:
      matchingIntervalSeconds: 30
      routingAlgorithm: "semantic-similarity"
      
  QualityAssuranceAgent:
    type: "QA"
    capabilities:
      - "requirement-extraction"
      - "test-generation"
      - "quality-validation"
      - "continuous-testing"
    configuration:
      testCoverage: 90
      qualityThreshold: 0.85
      automatedTesting: true

# Agent teams and collaboration
teams:
  enabled: true
  maxTeamSize: 5
  formationAlgorithm: "capability-based"
  
  # Team types
  teamTypes:
    Development:
      composition:
        - "Development: 2-3"
        - "QA: 1"
        - "Analysis: 1"
      objectives:
        - "feature-development"
        - "code-quality"
        - "testing"
        
    Infrastructure:
      composition:
        - "Infrastructure: 2-3"
        - "Coordination: 1"
      objectives:
        - "system-maintenance"
        - "deployment"
        - "monitoring"
        
    Research:
      composition:
        - "Analysis: 2"
        - "Development: 1"
        - "Coordination: 1"
      objectives:
        - "technology-research"
        - "proof-of-concept"
        - "innovation"

# Learning and adaptation
learning:
  enabled: true
  adaptationAlgorithm: "reinforcement-learning"
  learningRate: 0.01
  
  # Experience tracking
  experience:
    trackTaskOutcomes: true
    trackPerformanceMetrics: true
    trackUserFeedback: true
    
  # Adaptation
  adaptation:
    updateCapabilities: true
    adjustPriorities: true
    optimizeRouting: true
    
  # Knowledge sharing
  knowledgeSharing:
    enabled: true
    shareSuccessPatterns: true
    shareFailureAnalysis: true
    collaborativeLearning: true

# Security and access control
security:
  agentAuthentication: false
  agentAuthorization: false
  secureMessaging: false
  
  # When security is enabled
  authentication:
    method: "token-based"
    tokenExpirationMinutes: 60
    
  authorization:
    roleBasedAccess: true
    capabilityBasedAccess: true
    
  messaging:
    encryption: false
    signing: false

# Development and debugging
development:
  debugMode: false
  verboseLogging: false
  agentTracing: false
  simulationMode: false
  
  # Testing
  testing:
    mockAgents: false
    simulateFailures: false
    loadTesting: false
