module TarsEngine.FSharp.Cli.Program

open System
open Microsoft.Extensions.DependencyInjection
open Microsoft.Extensions.Logging
open TarsEngine.FSharp.Core.Compilation

// Placeholder for the CLI application
type CliApplication() =
    member _.Run(args: string[]) =
        printfn "Running TARS CLI with arguments: %A" args
        // Return a success result
        {| ExitCode = 0 |}

[<EntryPoint>]
let main args =
    try
        // Create service collection
        let services = new ServiceCollection()
        
        // Add logging
        services.AddLogging(fun logging -> 
            logging.AddConsole() |> ignore
        ) |> ignore
        
        // Add F# compiler - using the existing FSharpCompilerImpl from the Core project
        services.AddSingleton<IFSharpCompiler, FSharpCompilerImpl>() |> ignore
        
        // Add CLI application
        services.AddSingleton<CliApplication>() |> ignore
        
        // Build service provider
        let serviceProvider = services.BuildServiceProvider()
        
        // Get CLI application
        let app = serviceProvider.GetRequiredService<CliApplication>()
        
        // Run application
        let result = app.Run(args)
        
        // Return exit code
        result.ExitCode
    with
    | ex ->
        Console.ForegroundColor <- ConsoleColor.Red
        Console.Error.WriteLine($"Error: {ex.Message}")
        Console.ResetColor()
        1
