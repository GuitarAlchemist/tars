# TARS Task Manager - Kubernetes Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tars-task-manager
  labels:
    app: tars-task-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tars-task-manager
  template:
    metadata:
      labels:
        app: tars-task-manager
    spec:
      containers:
      - name: api
        image: ghcr.io/tars/tars-task-manager:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: tars-task-manager-service
spec:
  selector:
    app: tars-task-manager
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tars-task-manager-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.tars-taskmanager.com
    secretName: tars-task-manager-tls
  rules:
  - host: api.tars-taskmanager.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tars-task-manager-service
            port:
              number: 80
